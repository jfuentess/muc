import re
import urllib2
import sys
import os

opener = urllib2.build_opener()
opener.addheaders = [('User-agent', 'Mozilla/5.0')]
HTMLcode = opener.open(sys.argv[1])

for line in HTMLcode:

	if re.search("\<img class=\"tex\"", line):
		latex = re.search("alt=\"(.*?)\"", line)
		try:
			line = re.sub("alt=\"(.*?)\"", latex.group(0)+" verb=\"Verbalizacion\"",line)
			print "<font color=\"#ff0000\"><b>"
			mathtex = re.sub("alt=","",latex.group(0)) # Elimina la aparicion de "alt="
			mathtex = "\"\$ " + re.sub("\"","",mathtex) + " \$\"" # Elimina las apariciones de "
			mathtex = re.sub("\\\,","",mathtex) # Elimina las apariciones de "\,"
			mathtex = re.sub("\\\ ","",mathtex) # Elimina las apariciones de "\ "
			mathtex = re.sub("&lt;","<",mathtex) # Reemplaza &lt; por <
			mathtex = re.sub("&gt;",">",mathtex) # Reemplaza &gt; por >
			mathtex = re.sub("\\\\ne ","\\\\neq ",mathtex) # Reemplaza \ne por \neq 
			decimal = re.search(",[0-9]", mathtex) # Reemplaza "," por "." en los numeros decimales y no en los vectores
			try:
				mathtex = re.sub(",[0-9]", "."+re.sub(",","",decimal.group(0)), mathtex)
			except:
				pass

			print "LaTeX: " + mathtex + "<br/>"
			print "</b></font>"

			output = ""
			mathml = os.popen("java -cp .:snuggletex-upconversion-1.2.2.jar:snuggletex-core-1.2.2.jar:saxon9-dom-9.1.0.8.jar:saxon9-9.1.0.8.jar LatextoMathml " + mathtex, "r").read()
			
			if len(mathml) > 0:
				line_mathml = re.split(r"\n",mathml)

				content = False
				input_mathml = ""

				for tag in line_mathml:
					if re.search("/annotation-xml",tag):
						content = False

					if content:
						input_mathml += tag

					if re.search("MathML-Content",tag):
						content = True
				output = os.popen("python generador/module1.py \"" + input_mathml + "\"", "r").read()

			else:
				output = "No se pueder generar texto"
				
			print "<font color=\"#ff0000\"><b>"
			print "Verbalizacion: " + output 
			print "</b></font>"

		except:
			pass

		print line
	else:
		print line
		
